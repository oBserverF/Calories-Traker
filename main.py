from telebot import TeleBot, types
from telebot import custom_filters
from telebot.handler_backends import State, StatesGroup
from telebot.storage import StateMemoryStorage

from config import BOT_TOKEN
from database import *

memory_storage = StateMemoryStorage()
bot = TeleBot(BOT_TOKEN, state_storage=memory_storage)


class AddStats(StatesGroup):
    change_data = State()
    add_gender = State()
    add_weight = State()
    add_height = State()
    add_age = State()


class AddFood(StatesGroup):
    product_name = State()
    product_weight = State()


@bot.message_handler(state='*', commands=['start', 'cancel'])
def start(message: types.Message):
    bot.delete_state(message.from_user.id)

    text_msg = """
–î–æ–±—Ä—ã–π –¥–µ–Ω—åüëã!
–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ø–æ–¥—Å—á–∏—Ç–∞—Ç—å –≤–∞—à–∏ –∫–∞–ª–æ—Ä–∏–∏ –∑–∞ –¥–µ–Ω—å!

–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:

/info-<i>–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∏—Ö</i>

/mystats-<i>–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è(–ø–æ–ª, –≤–µ—Å, —Ä–æ—Å—Ç, –≤–æ–∑—Ä–∞—Å—Ç, –Ω–æ—Ä–º–∞ –∫–∞–ª–æ—Ä–∏–π)</i>

/addstats-<i>–ù–∞—á–∏–Ω–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –∑–∞–Ω–µ—Å–µ–Ω–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è(–ø–æ–ª,–≤–µ—Å, —Ä–æ—Å—Ç, –≤–æ–∑—Ä–∞—Å—Ç)</i>

/norm-<i>–í—ã–≤–æ–¥–∏—Ç —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—É—é –¥–Ω–µ–≤–Ω—É—é –Ω–æ—Ä–º—É –∫–∞–ª–æ—Ä–∏–π</i>

/today-<i>–í—ã–≤–æ–¥–∏—Ç –∫–æ–ª-–≤–æ –∫–∞–ª–æ—Ä–∏–π –∑–∞ –¥–µ–Ω—å</i>

/addfood-<i>–î–æ–±–∞–≤–∏—Ç—å –µ–¥—É –≤ –¥–Ω–µ–≤–Ω–æ–π —É—á–µ—Ç –∫–∞–ª–æ—Ä–∏–π</i>

/nextday-<i>–û–±–Ω—É–ª—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–ª-–≤–æ –∫–∞–ª–æ—Ä–∏–π –∑–∞ –¥–µ–Ω—å –≤ –±–¥.</i>
"""
    bot.send_message(message.from_user.id, text_msg, parse_mode='html')
    init_user(message.from_user.id)


@bot.message_handler(commands=['info'])
def info(message: types.Message):
    text_msg = """
–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:

/info-<i>–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∏—Ö</i>

/mystats-<i>–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è(–ø–æ–ª, –≤–µ—Å, —Ä–æ—Å—Ç, –≤–æ–∑—Ä–∞—Å—Ç, –Ω–æ—Ä–º–∞ –∫–∞–ª–æ—Ä–∏–π)</i>

/addstats-<i>–ù–∞—á–∏–Ω–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –∑–∞–Ω–µ—Å–µ–Ω–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è(–ø–æ–ª,–≤–µ—Å, —Ä–æ—Å—Ç, –≤–æ–∑—Ä–∞—Å—Ç)</i>

/norm-<i>–í—ã–≤–æ–¥–∏—Ç —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—É—é –¥–Ω–µ–≤–Ω—É—é –Ω–æ—Ä–º—É –∫–∞–ª–æ—Ä–∏–π</i>

/today-<i>–í—ã–≤–æ–¥–∏—Ç –∫–æ–ª-–≤–æ –∫–∞–ª–æ—Ä–∏–π –∑–∞ –¥–µ–Ω—å</i>

/addfood-<i>–î–æ–±–∞–≤–∏—Ç—å –µ–¥—É –≤ –¥–Ω–µ–≤–Ω–æ–π —É—á–µ—Ç –∫–∞–ª–æ—Ä–∏–π</i>

/nextday-<i>–û–±–Ω—É–ª—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–ª-–≤–æ –∫–∞–ª–æ—Ä–∏–π –∑–∞ –¥–µ–Ω—å.</i>
"""
    bot.send_message(message.from_user.id, text_msg, parse_mode='html')


@bot.message_handler(commands=['mystats'])
def show_stats(message: types.Message):
    db_request = get_user_stats(message.from_user.id)
    if db_request == (None, None, None, None, None):
        bot.send_message(message.from_user.id,
                         '–í—ã –µ—â–µ –Ω–µ –∑–∞–Ω–µ—Å–ª–∏ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ!\n'
                         '–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–Ω–µ—Å—Ç–∏ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /addstats')
    else:
        gender, weight, height, age, norm_calories = db_request
        text_msg = f"""
–í–∞—à –ø–æ–ª: {'–ñ–µ–Ω—Å–∫–∏–π' if gender == 'W' else '–ú—É–∂—Å–∫–æ–π'}
–í–∞—à –≤–µ—Å: {weight}
–í–∞—à —Ä–æ—Å—Ç: {height}
–í–∞—à –≤–æ–∑—Ä–∞—Å—Ç: {age}
–í–∞—à–∞ –Ω–æ—Ä–º–∞ –¥–Ω–µ–≤–Ω—ã—Ö –∫–∞–ª–æ—Ä–∏–π: {norm_calories}
"""
        bot.send_message(message.from_user.id, text_msg)


@bot.message_handler(commands=['addstats'])
def add_stats(message: types.Message):
    db_request = get_user_stats(message.from_user.id)
    if db_request == (None, None, None, None, None):
        reply_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        reply_markup.add(types.KeyboardButton(text='–ú'),
                         types.KeyboardButton(text='–ñ'))
        bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–æ–ª (–ú-–º—É–∂—Å–∫–æ–π, –ñ-–∂–µ—Å–∫–∏–π)\n'
                                               '–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–ø–∏—à–∏—Ç–µ /cancel !', reply_markup=reply_markup)
        bot.set_state(message.from_user.id, AddStats.add_gender)
    else:
        reply_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        reply_markup.add(types.KeyboardButton(text='–î–∞'),
                         types.KeyboardButton(text='–ù–µ—Ç'))
        bot.send_message(message.from_user.id, '–£ –≤–∞—Å —É–∂–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ, —Ö–æ—Ç–∏—Ç–µ –∏—Ö –∏–∑–º–µ–Ω–∏—Ç—å?',
                         reply_markup=reply_markup)
        bot.set_state(message.from_user.id, AddStats.change_data)


@bot.message_handler(state=AddStats.add_gender)
def add_gender(message: types.Message):
    if message.text.upper() in ['–ú', '–ñ']:
        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            if message.text.upper() == '–ú':
                data['gender'] = 'M'
            else:
                data['gender'] = 'W'
        bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–µ—Å')
        bot.set_state(message.from_user.id, AddStats.add_weight)
    else:
        bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –ø–æ–ª (–ú-–º—É–∂—Å–∫–æ–π, –ñ-–∂–µ–Ω—Å–∫–∏–π)!')


@bot.message_handler(state=AddStats.add_weight)
def add_weight(message: types.Message):
    try:
        weight = float(message.text)
        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            data['weight'] = weight
        bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ä–æ—Å—Ç')
        bot.set_state(message.from_user.id, AddStats.add_height)
    except ValueError:
        bot.send_message(message.from_user.id, '–í–µ—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º!')


@bot.message_handler(state=AddStats.add_height)
def add_height(message: types.Message):
    try:
        height = float(message.text)
        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            data['height'] = height
        bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç')
        bot.set_state(message.from_user.id, AddStats.add_age)
    except ValueError:
        bot.send_message(message.from_user.id, '–†–æ—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º!')


@bot.message_handler(state=AddStats.add_age)
def add_age(message: types.Message):
    try:
        age = int(message.text)
        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            data['age'] = age
            norm_calories = add_user_data(message.from_user.id,
                                          data['gender'],
                                          data['weight'],
                                          data['height'],
                                          data['age'])
            data = {}
        bot.send_message(message.from_user.id, f'–í–∞—à–∞ –¥–Ω–µ–≤–Ω–∞—è –Ω–æ—Ä–º–∞ –∫–∞–ª–æ—Ä–∏–π: {norm_calories}')
        info(message)
        bot.delete_state(message.from_user.id)
    except ValueError:
        bot.send_message(message.from_user.id, '–í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º!')


@bot.message_handler(state=AddStats.change_data)
def change_data(message: types.Message):
    if message.text.upper() == '–î–ê':
        reply_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        reply_markup.add(types.KeyboardButton(text='–ú'),
                         types.KeyboardButton(text='–ñ'))
        bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–æ–ª (–ú-–º—É–∂—Å–∫–æ–π, –ñ-–∂–µ—Å–∫–∏–π)\n'
                                               '–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–ø–∏—à–∏—Ç–µ /cancel !', reply_markup=reply_markup)
        bot.set_state(message.from_user.id, AddStats.add_gender)
    else:
        bot.delete_state(message.from_user.id)
        start(message)


@bot.message_handler(commands=['norm'])
def user_norm(message: types.Message):
    db_request = get_user_stats(message.from_user.id)
    if db_request == (None, None, None, None, None):
        bot.send_message(message.from_user.id,
                         '–í—ã –µ—â–µ –Ω–µ –∑–∞–Ω–µ—Å–ª–∏ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ!\n'
                         '–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–Ω–µ—Å—Ç–∏ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /addstats')
    else:
        bot.send_message(message.from_user.id, f'–í–∞—à–∞ –Ω–æ—Ä–º–∞ –∫–∞–ª–æ—Ä–∏–π: {db_request[-1]}')


@bot.message_handler(commands=['addfood'])
def add_food(message: types.Message):
    bot.send_message(message.from_user.id, '–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞')
    bot.set_state(message.from_user.id, AddFood.product_name)


@bot.message_handler(state=AddFood.product_name)
def add_product_name(message: types.Message):
    if product_in_list(message.text):
        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            data['product'] = message.text
        bot.send_message(message.from_user.id, '–ù–∞–ø–∏—à–∏—Ç–µ –≥—Ä–∞–º–º–æ–≤–∫—É –ø—Ä–æ–¥—É–∫—Ç–∞')
        bot.set_state(message.from_user.id, AddFood.product_weight)
    else:
        bot.send_message(message.from_user.id, '–ü—Ä–æ–¥—É–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!')


@bot.message_handler(state=AddFood.product_weight)
def add_product_weight(message: types.Message):
    try:
        weight = float(message.text)
        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            daily = add_product_in_daily(data['product'], weight, message.from_user.id)
        bot.delete_state(message.from_user.id)

        db_request = get_user_stats(message.from_user.id)
        if db_request == (None, None, None, None, None):
            bot.send_message(message.from_user.id,
                             '–í—ã –µ—â–µ –Ω–µ –∑–∞–Ω–µ—Å–ª–∏ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ! \n'
                             '–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–Ω–µ—Å—Ç–∏ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /addstats')
        else:
            if daily > db_request[-1]:
                bot.send_message(message.from_user.id,
                                 f'–í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ —Å—É—Ç–æ—á–Ω—É—é –Ω–æ—Ä–º—É –∫–∞–ª–æ—Ä–∏–π –Ω–∞ {daily - db_request[-1]}')
            elif daily == db_request[-1]:
                bot.send_message(message.from_user.id, f'–í—ã —Ä–æ–≤–Ω–æ —É–ª–æ–∂–∏–ª–∏—Å—å –≤ —Å—É—Ç–æ—á–Ω—É—é –Ω–æ—Ä–º—É –∫–∞–ª–æ—Ä–∏–π!')
            elif daily < db_request[-1]:
                bot.send_message(message.from_user.id,
                                 f'–í–∞–º –æ—Å—Ç–∞–ª–æ—Å—å {db_request[-1] - daily} –∫–∞–ª–æ—Ä–∏–π –¥–æ —Å—É—Ç–æ—á–Ω–æ–π –Ω–æ—Ä–º—ã')

    except ValueError:
        bot.send_message(message.from_user.id, '–ì—Ä–∞–º–º–æ–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º!')


@bot.message_handler(commands=['nextday'])
def nextday(message: types.Message):
    set_zero(message.from_user.id)
    bot.send_message(message.from_user.id, '–î–Ω–µ–≤–Ω—ã–µ –∫–∞–ª–æ—Ä–∏–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω—É–ª–µ–Ω—ã!')


@bot.message_handler(commands=['today'])
def today(message: types.Message):
    daily = get_daily(message.from_user.id)
    bot.send_message(message.from_user.id, f'–í–∞—à–∏ –∫–∞–ª–æ—Ä–∏–∏ –∑–∞ –¥–µ–Ω—å: {daily}')

    db_request = get_user_stats(message.from_user.id)
    if db_request == (None, None, None, None, None):
        bot.send_message(message.from_user.id,
                         '–í—ã –µ—â–µ –Ω–µ –∑–∞–Ω–µ—Å–ª–∏ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ! \n'
                         '–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–Ω–µ—Å—Ç–∏ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /addstats')
    else:
        if daily > db_request[-1]:
            bot.send_message(message.from_user.id, f'–í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ —Å—É—Ç–æ—á–Ω—É—é –Ω–æ—Ä–º—É –∫–∞–ª–æ—Ä–∏–π –Ω–∞ {daily - db_request[-1]}')
        elif daily == db_request[-1]:
            bot.send_message(message.from_user.id, f'–í—ã —Ä–æ–≤–Ω–æ —É–ª–æ–∂–∏–ª–∏—Å—å –≤ —Å—É—Ç–æ—á–Ω—É—é –Ω–æ—Ä–º—É –∫–∞–ª–æ—Ä–∏–π!')
        elif daily < db_request[-1]:
            bot.send_message(message.from_user.id, f'–í–∞–º –æ—Å—Ç–∞–ª–æ—Å—å {db_request[-1]-daily} –∫–∞–ª–æ—Ä–∏–π –¥–æ —Å—É—Ç–æ—á–Ω–æ–π –Ω–æ—Ä–º—ã')


if __name__ == '__main__':
    init_db()
    bot.add_custom_filter(custom_filters.StateFilter(bot))
    bot.infinity_polling()
